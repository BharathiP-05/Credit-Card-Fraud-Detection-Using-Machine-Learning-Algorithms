/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.69
 * Generated at: 2023-03-18 07:20:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.*;
import java.util.*;
import java.text.*;
import java.util.Date;
import java.sql.*;
import com.oreilly.servlet.*;
import java.lang.*;
import java.text.SimpleDateFormat;
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
import java.util.*;
import java.security.Key;
import java.util.Random;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import org.bouncycastle.util.encoders.Base64;
import java.util.Random;
import java.io.PrintStream;
import java.io.FileOutputStream;
import java.io.FileInputStream;
import java.security.DigestInputStream;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.io.BufferedInputStream;

public final class User_005fPaymentStatus_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/connect.jsp", Long.valueOf(1540290754000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("com.oreilly.servlet");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("java.lang");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.PrintStream");
    _jspx_imports_classes.add("java.io.BufferedInputStream");
    _jspx_imports_classes.add("org.bouncycastle.util.encoders.Base64");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.security.MessageDigest");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("javax.crypto.spec.SecretKeySpec");
    _jspx_imports_classes.add("java.io.FileOutputStream");
    _jspx_imports_classes.add("java.util.Random");
    _jspx_imports_classes.add("java.io.FileInputStream");
    _jspx_imports_classes.add("javax.crypto.Cipher");
    _jspx_imports_classes.add("java.security.Key");
    _jspx_imports_classes.add("java.security.DigestInputStream");
    _jspx_imports_classes.add("java.math.BigInteger");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<title></title>\r\n");
      out.write("\r\n");
      out.write("\r\n");

	Connection connection = null;
 	try {
     

	  	Class.forName("com.mysql.jdbc.Driver");	
		connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/cc_fraud","root","root");
      	String sql="";

	}
	catch(Exception e)
	{
		System.out.println(e);
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("<title>User Payment Status</title>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<link href=\"css/style.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/coin-slider.css\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/cufon-yui.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/cufon-quicksand.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/jquery-1.4.2.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/script.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/coin-slider.min.js\"></script>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("<!--\r\n");
      out.write(".style1 {\r\n");
      out.write("	font-size: 24px;\r\n");
      out.write("	color: #FF0000;\r\n");
      out.write("}\r\n");
      out.write(".style3 {color:#FF3300}\r\n");
      out.write(".style4 {color: #FFFFFF}\r\n");
      out.write(".style7 {color: #006666}\r\n");
      out.write("-->\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"main\">\r\n");
      out.write("  <div class=\"header\">\r\n");
      out.write("    <div class=\"header_resize\">\r\n");
      out.write("      <div class=\"logo\">\r\n");
      out.write("        <h1 align=\"center\"><a href=\"index.html\" class=\"style1\">Credit card fraud detection using AdaBoost and majority voting</a></h1>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"menu_nav\">\r\n");
      out.write("        <ul>\r\n");
      out.write("          <li class=\"active\"><a href=\"index.html\"><span>Home Page</span></a></li>\r\n");
      out.write("          <li><a href=\"AdminLogin.jsp\"><span>Bank Admin</span></a></li>\r\n");
      out.write("          <li><a href=\"EcommerceLogin.jsp\"><span>Ecommerce</span></a></li>\r\n");
      out.write("          <li><a href=\"UserLogin.jsp\"><span>User</span></a></li>\r\n");
      out.write("          <li><a href=\"#\"><span>Contact Us</span></a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"clr\"></div>\r\n");
      out.write("      <div class=\"slider\">\r\n");
      out.write("        <div id=\"coin-slider\"> <a href=\"#\"><img src=\"images/slide1.jpg\" width=\"935\" height=\"285\" alt=\"\" /> </a> <a href=\"#\"><img src=\"images/slide2.jpg\" width=\"935\" height=\"285\" alt=\"\" /> </a> <a href=\"#\"><img src=\"images/slide3.jpg\" width=\"935\" height=\"285\" alt=\"\" /> </a> </div>\r\n");
      out.write("        <div class=\"clr\"></div>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"clr\"></div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  <div class=\"content\">\r\n");
      out.write("    <div class=\"content_resize\">\r\n");
      out.write("      <div class=\"mainbar\">\r\n");
      out.write("        <div class=\"article\"> \r\n");
      out.write("          <h2 class=\"style4\" style=\"color:#CC6600\">Product Purchase Status ....</h2>\r\n");
      out.write("          <div class=\"clr\"></div>          \r\n");
      out.write("          <div class=\"post_content\">\r\n");
      out.write("            ");
 

							SimpleDateFormat sdfDate = new SimpleDateFormat("dd/MM/yyyy");
							SimpleDateFormat sdfTime = new SimpleDateFormat("HH:mm:ss");
							Date now = new Date();

							String strDate = sdfDate.format(now);
							String strTime = sdfTime.format(now);
							String date = strDate + "   " + strTime;

try
{
			String expdate="";

			String p_Name=request.getParameter("p_Name");	
			
			String p_Category=request.getParameter("p_Category");
			
			String price=request.getParameter("pr");
			
			String site=request.getParameter("site");
			
			String card=request.getParameter("card");
			
			String cardcvv=request.getParameter("cardcvv");
			
			String user=(String)application.getAttribute("uname");
			
			String bank=(String)application.getAttribute("ubank");



							

	
	int currentbalance1=0,credit_to_be_taken=0;	
	int creditlimit=0,crlimit=0,credit_taken=0,vt=0,vte=0; 
	String a_no="",crn="";
	
String cardsql="SELECT * FROM creditcard where a_name='"+user+"' and a_no='"+card+"' and cvv='"+cardcvv+"' ";
Statement cardst = connection.createStatement();
ResultSet cardrs =cardst.executeQuery(cardsql);
if(cardrs.next()==true)
{

		 credit_taken=cardrs.getInt(11);
		 crlimit= Integer.parseInt(cardrs.getString(8));
		expdate= cardrs.getString(10);
								
								
								
	Date exp_date = sdfDate.parse(expdate);
	Date todays_date = sdfDate.parse(strDate);
								
								
								
	if( exp_date.compareTo(todays_date) >0 )
	{
	
	
		 
		 
	
				if(credit_taken<crlimit)
				{
	
							String query41="select cr_limit from creditcard where a_no='"+card+"'";
							Statement st41=connection.createStatement();
							ResultSet rs41=st41.executeQuery(query41);
							if ( rs41.next() )
							{
							creditlimit=rs41.getInt(1);
		
							credit_to_be_taken=crlimit-credit_taken;
							}
						int product_price=Integer.parseInt(price);
						if(product_price<=creditlimit && product_price<=credit_to_be_taken)
						{
	
			
							String cr_taken=String.valueOf(credit_taken+product_price);
							
							
							
							

							
							
						/* Updating the borrowed Credit into Credit Card */
														
							String crtkn="UPDATE creditcard SET credit_taken="+cr_taken+" where a_no='"+card+"'";
							Statement crtk=connection.createStatement();
							crtk.executeUpdate(crtkn);
							
							/* Updation Query Ends */
							
							
							
						/* Updating the Transaction Details into Transactions Tabel */	
						
							String status="Success";
							String purpose="Purchase";
							String frombank="null";
							String fromaccount_no="null";
							String fromuser="null";
							String balance_credited="null";
							String credit_status="null";
							
							String sql31="insert into transactions(user,bank,amount,a_no,cvv,date,status,site,tranfor,frombank,fromaccount_no,fromuser,balance_credited,credit_status)values('"+user+"','"+bank+"','"+price+"','"+card+"','"+cardcvv+"','"+date+"','"+status+"','"+site+"','"+purpose+"','"+frombank+"','"+fromaccount_no+"','"+fromuser+"','"+balance_credited+"','"+credit_status+"')";
						Statement stmt31 = connection.createStatement();
						stmt31.executeUpdate(sql31);
						
						
						/* Updation Query Ends */




						PreparedStatement ps1=connection.prepareStatement("insert into purchase(user,p_name,p_category,date,price,site) values(?,?,?,?,?,?)");
														
														ps1.setString(1,user);
														ps1.setString(2,p_Name);
														ps1.setString(3,p_Category);
														ps1.setString(4,date);
														ps1.setString(5,price);
														ps1.setString(6,site);
														
														int k1=ps1.executeUpdate();
						
			
									if(k1>0)
									{	
									
					
					
					
					
									
      out.write("\r\n");
      out.write("		  </div>\r\n");
      out.write("									<br/><br/> <p align=\"center\" class=\"style7\">Transaction Done Successfully..</p>\r\n");
      out.write("									<div align=\"center\"><br/>\r\n");
      out.write("									<br/>\r\n");
      out.write("									<a href=\"User_SearchProducts.jsp\">Back</a>\r\n");
      out.write("									");

									}
									else
									{
									
      out.write("\r\n");
      out.write("									</div>\r\n");
      out.write("									<br/><br/><p align=\"center\" class=\"style7\">Transaction Failed !!..Please Try Again..</p>\r\n");
      out.write("									<div align=\"center\"><br/>\r\n");
      out.write("									<br/>\r\n");
      out.write("									<a href=\"UserMain.jsp\">Back</a>\r\n");
      out.write("									");

									}
			
	
						}
						else
						{
										
						
						
      out.write("\r\n");
      out.write("						</div>\r\n");
      out.write("						<br/><br/> <p align=\"center\" class=\"style7\">Product Price is more than the Credit Limit..Please try Again..</p>\r\n");
      out.write("						<div align=\"center\"><br/>\r\n");
      out.write("						<br/>\r\n");
      out.write("						<a href=\"UserMain.jsp\">Back</a>\r\n");
      out.write("						");

						}
		
				}
				else{
				
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("				<br/><br/><p align=\"center\" class=\"style7\">Credit Taken Exceeded the Maximum Credit Limit. Please Pay back the amount of Credit taken within the valid time period</p>\r\n");
      out.write("				<div align=\"center\"><br/>\r\n");
      out.write("				<br/>\r\n");
      out.write("				<a href=\"UserMain.jsp\">Back</a>\r\n");
      out.write("				");

				}
	}
	else
	{
					vt+=1;
					String cvv="select * from financial_fraud_expiredcard where user='"+user+"' and bank='"+bank+"' and site='"+site+"'"; 
					Statement cvvst=connection.createStatement();
					ResultSet cvvrs=cvvst.executeQuery(cvv);
									
					if( cvvrs.next()==true )
					{
					int vote=cvvrs.getInt(11);
					int newvote=vote+1;
					String qq="Update financial_fraud_expiredcard set vote='"+newvote+"' where user='"+user+"' and fraud_type='"+"Expired Card"+"'"; 
					Statement sts=connection.createStatement();
					sts.executeUpdate(qq);
					}	
					else
					{
					PreparedStatement cvvps = connection.prepareStatement("insert into financial_fraud_expiredcard(card_no,cvv,user,bank,purchase_amount,activity,site,date,fraud_type,vote) values(?,?,?,?,?,?,?,?,?,?)");				
					
					cvvps.setString(1, card);
					cvvps.setString(2, cardcvv);
					cvvps.setString(3, user);
					cvvps.setString(4, bank);
					cvvps.setString(5, price);
					cvvps.setString(6, "Abnormal");
					cvvps.setString(7, site);
					cvvps.setString(8, date);
					cvvps.setString(9, "Expired Card");
					cvvps.setInt(10, vt);
										
					cvvps.executeUpdate();
												
										
					}
	
	
	
	String abuser="insert into financial_fraud(card_no,cvv,user,bank,purchase_amount,activity,site,date,fraud_type)values('"+card+"','"+cardcvv+"','"+user+"','"+bank+"','"+price+"','"+"Abnormal"+"','"+site+"','"+date+"','"+"Expired Card"+"')";
					Statement abstmt = connection.createStatement();
					abstmt.executeUpdate(abuser);
					
					
	
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	<br/><br/> <p align=\"center\" class=\"style7\">Credit Card Expired..Please Check Your Card Validity..</p>\r\n");
      out.write("	<div align=\"center\"><br/>\r\n");
      out.write("	<br/>\r\n");
      out.write("	<a href=\"UserMain.jsp\">Back</a>\r\n");
      out.write("	");

	}
}	
else
{
					vte+=1;
					String cvv="select * from financial_fraud_wrongcvv where user='"+user+"' and bank='"+bank+"' and site='"+site+"'"; 
					Statement cvvst=connection.createStatement();
					ResultSet cvvrs=cvvst.executeQuery(cvv);
									
					if( cvvrs.next()==true )
					{
					int vote=cvvrs.getInt(11);
					int newvote=vote+1;
					String qq="Update financial_fraud_wrongcvv set vote='"+newvote+"' where user='"+user+"' and fraud_type='"+"Wrong CVV"+"'"; 
					Statement sts=connection.createStatement();
					sts.executeUpdate(qq);
					}	
					else
					{
					PreparedStatement cvvps = connection.prepareStatement("insert into financial_fraud_wrongcvv(card_no,cvv,user,bank,purchase_amount,activity,site,date,fraud_type,vote) values(?,?,?,?,?,?,?,?,?,?)");				
					
					cvvps.setString(1, card);
					cvvps.setString(2, cardcvv);
					cvvps.setString(3, user);
					cvvps.setString(4, bank);
					cvvps.setString(5, price);
					cvvps.setString(6, "Abnormal");
					cvvps.setString(7, site);
					cvvps.setString(8, date);
					cvvps.setString(9, "Wrong CVV");
					cvvps.setInt(10, vte);
										
					cvvps.executeUpdate();
												
										
					}


String abuser="insert into financial_fraud(card_no,cvv,user,bank,purchase_amount,activity,site,date,fraud_type)values('"+card+"','"+cardcvv+"','"+user+"','"+bank+"','"+price+"','"+"Abnormal"+"','"+site+"','"+date+"','"+"Wrong CVV"+"')";
					Statement abstmt = connection.createStatement();
					abstmt.executeUpdate(abuser);
					

      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<br/><br/> <p align=\"center\" class=\"style7\">You Have Entered Wrong CVV Number..Please Try Again..</p>\r\n");
      out.write("<div align=\"center\"><br/>\r\n");
      out.write("<br/>\r\n");
      out.write("<a href=\"UserMain.jsp\">Back</a>\r\n");

}	
	
	




connection.close();
}
catch(Exception e)
{
out.print(e);
}


      out.write("\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"clr\"></div>\r\n");
      out.write("        </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      <div class=\"sidebar\">\r\n");
      out.write("        <div class=\"searchform\">\r\n");
      out.write("          <form id=\"formsearch\" name=\"formsearch\" method=\"post\" action=\"#\">\r\n");
      out.write("            <span>\r\n");
      out.write("            <input name=\"editbox_search\" class=\"editbox_search\" id=\"editbox_search\" maxlength=\"80\" value=\"Search our ste:\" type=\"text\" />\r\n");
      out.write("            </span>\r\n");
      out.write("            <input name=\"button_search\" src=\"images/search.gif\" class=\"button_search\" type=\"image\" />\r\n");
      out.write("          </form>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"clr\"></div>\r\n");
      out.write("        <div class=\"gadget\">\r\n");
      out.write("          <h2 class=\"star\"><span>Sidebar</span> Menu</h2>\r\n");
      out.write("          <div class=\"clr\"></div>\r\n");
      out.write("          <ul class=\"sb_menu\">\r\n");
      out.write("           				  <li><a href=\"UserMain.jsp\">Home</a></li>					  \r\n");
      out.write("          				  <li><a href=\"UserLogin.jsp\">Logout </a></li>\r\n");
      out.write("			\r\n");
      out.write("            \r\n");
      out.write("          </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"clr\"></div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  <div class=\"footer\"></div>\r\n");
      out.write("</div>\r\n");
      out.write("<div align=center></div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
